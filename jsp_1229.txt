// 자바스크립트 공부하면서 얻은 사실들.
https://webclub.tistory.com/1
1. undefined == null  -> true
2. undefined === null  -> false
	- 정리하자면 undefined나 null이나 boolean으로는 같은 false이기 때문에 == 로는 true.
	- 하지만 타입까지 보는 === 에서는 서로 다른 타입이기 때문에 false.

3. undefined -> undefined 타입.
4. null -> object 타입
즉, var a; -> undefined 이라는 값을 가지는 것임.
   a = null -> null값을 가짐.
null 객체 자체를 줘야 null이 되는 것임.
 --> 분명한 차이점은 undefined는 변수를 선언만 하더라도 할당되지만 null은 변수를 선언한 후에 null로 값을 바꾼다는 점입니다.

하나더...
typeof null == null;
	-> false

결론적으로 포괄적으로는 둘 다 값이 없다는 뜻은 변하지 않음.

도랏맨....
66 + true; 
 >> 67
66 - true;  
 >> 65

66 + false  
>> 66
66 - false 
 >> 66
즉, 정수랑 만나면 true = 1, false = 0 이라는 소리.

more..
1 == true; 
>> true
1 === true;
 >> false

true + 'ocean';
  >> "trueocean"

false + 'ocean';
 >> "falseocean"

true - 'ocean';
 >> NaN

'true' == true
 >> false (Nan == 1) 이랑 같은 것임.
즉 ==는 정수로 변환시켜주는 역할을 함.

--> 결론 대가리 아프니까 그냥 === 만 쓰자.

[] >= []
 >> true 
	-> 이건 왜 그러는 걸까..

instance of 연산자를 사용.

// var의 문제점. scope, 함수안에 선언된 var는 밖에서 사용 가능.

// 객체와 배열에 관하여...
https://www.zerocho.com/category/JavaScript/post/572c6f759a5f1c4db2481ee3

// 콜백함수가 클래스 객체 여러개 생성 기능? -> 아님 .. ㅡㅡ

// 유익한 블로그들
https://medium.com/@bluesh55/javascript-prototype-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-f8e67c286b67

// 자바스크립트 데이터 타입
JavaScript Data Type
- number, string, boolean, object(function, array, data, regexp), null, undefined

// 자바스크립트는 null과 undefined 타입을 제외하고 모든 것을 객체로 다룬다.

// prompt('입력받기 : ');

// 자바스크립트 배열 메소드 (with call back)
http://www.tcpschool.com/javascript/js_standard_arrayMethod

// 프로미스나인ㅅㅂ

// 생성자 함수는 앞글자 반드시 대문자 like class

// 콜백함수 100% 활용하기.
// http://www.tcpschool.com/javascript/js_standard_arrayMethod



