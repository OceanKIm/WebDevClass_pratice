// 오늘은... 시험때문에 학원 못가는 날..

1. 혼자서 페이징 조회 "<<" " >>"  구현해보기.

<혼자서 금요일 수업 따라가기>
1. AOP 구현
https://atoz-develop.tistory.com/entry/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-AOP-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4-%EB%B0%8F-%EC%A0%81%EC%9A%A9-%EB%B0%A9%EB%B2%95
 - 인터페이스가 자바의 꽃인 이유....
	BoardDAO.myExecuteUpdate(sql, new SQLInterUpdate() {
		@Override
		public void proc(PreparedStatement ps) throws SQLException {
			ps.setInt(1, param.getTyp());			
			ps.setInt(2, param.getI_board());
		}
	});
 - 인터페이스 다시 공부.
https://gbs1995.tistory.com/15
	// 익명객체구현
	// 매게변수에 인터페이스 변수를 선언하고.
	// 해당 메소드를 호출시 그 메소드 파라미터 안에서 new 인터페이스명 (){ // 구현 } 
// new 인터페이스명 -> 익명 객체 구현! (단, 무조건 인터페이스로 선언된 변수에 가능!)
// 결론 -> 함수호출시 매개변수에 인터페이스가 있으면 new 인터페이스 명으로 커스텀마이징하게 해당 메소드를 구현시킬 수 있다.

// 정리 -> 인터페이스가 있고 다른 클래스의 메소드가 그 인터페이스를 구현없이 인터페이스 추상메소드 호출 가능.
	단, 해당 메소드 호출시 new 키워드로 인터페이스 추상메소드를 구현하지 않을 시 null point Ex 에러 발생.
	하지만 커스텀 마이징하게 상황에 따라 구현할 수 있으므로 매우 유용하다!.

// static 변수나 메소드에서는 this. 키워드를 사용할 수 없음 -> 공유된 영역이니까.

2. 댓글 기능 구현
// 완성 -> 연습으로 한번 더 만들기.
// 추가할 기능들.
	1. 댓글을 한정적으로 보여주고 더 보기 기능을 추가하기. - 완료
	2. 댓글 작성일자, 공감, 비공감 컬럼 추가 - 완료
	3. 공감 비공감 기능 추가. 단 ip로 구분해서 추가 공감 금지 시키기. - 완료
	4. 게시판 순번을 해당 글의 순번으로 변경. - 미완
	5. 댓글삭제 - 미완(테이블 구조 변경해야함.)
	6. 댓글도배방지기능. - 미완

// 내일 할 것들
1. 연습board 혼자 aop 구현. 인터페이스, 메소드 이름만 일치시키기. - 완료
2. 연습 살짝 참고해가면서 댓글 기능 구현 - 완료
3. 댓글 추가적인 기능 구현
4. 페이징 '<<'  '>>' 기능 구현.  --> 클래스화는 성공 하지만 로직 구현 다시...
-> 이거 안하면 프로그래머 포기하셈.
